@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    Layout = "~/Views/Shared/SEO/_Analytics.cshtml";
    ViewData["Title"] = "Google API Analytics Test";
    ViewData["Message"] = "Google API Analytics Test - Gaolos App v2017";
}

<script>
    (function (w, d, s, g, js, fs) {
        g = w.gapi || (w.gapi = {}); g.analytics = { q: [], ready: function (f) { this.q.push(f); } };
        js = d.createElement(s); fs = d.getElementsByTagName(s)[0];
        js.src = 'https://apis.google.com/js/platform.js';
        fs.parentNode.insertBefore(js, fs); js.onload = function () { g.load('analytics'); };
    }(window, document, 'script'));
</script>

<div class="main-content">

    <div class="container-fluid">

        <div class="row">

            <div class="col-12">


            </div>

        </div>

        <div class="row">

            <div class="col-12">

                <div class="card mb-3">
                    <div class="card-header card-header-options">
                        <span>@ViewData["Title"]</span>
                        @Html.Partial("PanelActions")
                    </div>
                    <div class="card-block">


                        <div class="row">

                            <div class="col-4">

                                <div class="card card-table mb-3">
                                    <div class="card-header card-header-options">
                                        <span>Listado de dominios</span>
                                        @Html.Partial("PanelActions")
                                    </div>
                                    <div class="card-block">

                                        <table class="table table-striped">
                                            <thead>
                                                <tr>
                                                    <th>Web</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                <tr>
                                                    <td><a href="#"><strong>www.gaolos.com</strong></a></td>
                                                </tr>
                                                <tr>
                                                    <td><a href="#"><strong>www.gaolos.com</strong></a></td>
                                                </tr>
                                                <tr>
                                                    <td><a href="#"><strong>www.gaolos.com</strong></a></td>
                                                </tr>
                                            </tbody>
                                        </table>

                                    </div>
                                </div>

                            </div>

                            <div class="col-8">

                                <div class="card mb-3">
                                    <div class="card-header card-header-options">
                                        <span>@ViewData["Title"]</span>
                                        @Html.Partial("PanelActions")
                                    </div>
                                    <div class="card-block">

                                        <canvas id="graficaEjemplo2" width="400" height="200"></canvas>

                                    </div>
                                </div>

                            </div>

                        </div>

                        <div class="row">

                            @* Analytics Reporting API V4 *@
                            <div class="col-6">

                                <div class="card mb-3">
                                    <div class="card-header card-header-options">
                                        <span>Autorización con oAuth</span>
                                        @Html.Partial("PanelActions")
                                    </div>
                                    <div class="card-block">

                                        <h1>Hello Analytics Reporting API V4</h1>

                                        <p>API de informes Hello Analytics (v.4): inicio rápido en JavaScript para aplicaciones web</p>
                                        <p><a href="https://developers.google.com/analytics/devguides/reporting/core/v4/quickstart/web-js">https://developers.google.com/analytics/devguides/reporting/core/v4/quickstart/web-js</a></p>

                                        <p>
                                            <!-- The Sign-in button. This will run `queryReports()` on success. -->
                                            <div class="g-signin2" data-onsuccess="queryReports"></div>
                                        </p>

                                        <!-- The API response will be printed here. -->
                                        <textarea cols="80" rows="20" id="query-output"></textarea>

                                        <script>
                                            // Replace with your view ID.
                                            var VIEW_ID = '105059559';

                                            // Query the API and print the results to the page.
                                            function queryReports() {
                                                gapi.client.request({
                                                    path: '/v4/reports:batchGet',
                                                    root: 'https://analyticsreporting.googleapis.com/',
                                                    method: 'POST',
                                                    body: {
                                                        reportRequests: [
                                                          {
                                                              viewId: VIEW_ID,
                                                              dateRanges: [
                                                                {
                                                                    startDate: '7daysAgo',
                                                                    endDate: 'today'
                                                                }
                                                              ],
                                                              metrics: [
                                                                {
                                                                    expression: 'ga:sessions'
                                                                }
                                                              ]
                                                          }
                                                        ]
                                                    }
                                                }).then(displayResults, console.error.bind(console));
                                            }

                                            function displayResults(response) {
                                                var formattedJson = JSON.stringify(response.result, null, 2);
                                                document.getElementById('query-output').value = formattedJson;
                                            }
                                        </script>

                                        <!-- Load the JavaScript API client and Sign-in library. -->
                                        <script src="https://apis.google.com/js/client:platform.js"></script>

                                    </div>
                                </div>
                            </div>

                            <div class="col-6">
                                @* Embed Reporting *@
                                <div class="card mb-3">
                                    <div class="card-header card-header-options">
                                        <span>Vista últimos 30 días [todas las cuentas]</span>
                                        @Html.Partial("PanelActions")
                                    </div>
                                    <div class="card-block">

                                        <div id="embed-api-auth-container"></div>
                                        <div id="chart-container"></div>
                                        <div id="view-selector-container"></div>

                                        <script>

                                            gapi.analytics.ready(function () {

                                                /**
                                                 * Authorize the user immediately if the user has already granted access.
                                                 * If no access has been created, render an authorize button inside the
                                                 * element with the ID "embed-api-auth-container".
                                                 */
                                                gapi.analytics.auth.authorize({
                                                    container: 'embed-api-auth-container',
                                                    clientid: '733483521618-grnt5e6d4c1v425kea2ndulfut5oqcsn.apps.googleusercontent.com'
                                                });


                                                /**
                                                 * Create a new ViewSelector instance to be rendered inside of an
                                                 * element with the id "view-selector-container".
                                                 */
                                                var viewSelector = new gapi.analytics.ViewSelector({
                                                    container: 'view-selector-container'
                                                });

                                                // Render the view selector to the page.
                                                viewSelector.execute();


                                                /**
                                                 * Create a new DataChart instance with the given query parameters
                                                 * and Google chart options. It will be rendered inside an element
                                                 * with the id "chart-container".
                                                 */
                                                var dataChart = new gapi.analytics.googleCharts.DataChart({
                                                    query: {
                                                        metrics: 'ga:sessions',
                                                        dimensions: 'ga:date',
                                                        'start-date': '30daysAgo',
                                                        'end-date': 'yesterday'
                                                    },
                                                    chart: {
                                                        container: 'chart-container',
                                                        type: 'LINE',
                                                        options: {
                                                            width: '100%'
                                                        }
                                                    }
                                                });


                                                /**
                                                 * Render the dataChart on the page whenever a new view is selected.
                                                 */
                                                viewSelector.on('change', function (ids) {
                                                    dataChart.set({ query: { ids: ids } }).execute();
                                                });

                                            });
                                        </script>

                                    </div>
                                </div>
                            </div>

                        </div>

                        <div class="row">

                            <div class="col-6">
                                <div class="card mb-3">
                                    <div class="card-header card-header-options">
                                        <span>Vista por países en gráfica circular, con ejemplo de multiview [todas las cuentas]</span>
                                        @Html.Partial("PanelActions")
                                    </div>
                                    <div class="card-block">

                                        <div id="embed-api-auth-container"></div>
                                        <div id="chart-1-container"></div>
                                        <div id="chart-2-container"></div>
                                        <div id="view-selector-1-container"></div>
                                        <div id="view-selector-2-container"></div>

                                        <script>

                                            gapi.analytics.ready(function () {

                                                /**
                                                 * Authorize the user immediately if the user has already granted access.
                                                 * If no access has been created, render an authorize button inside the
                                                 * element with the ID "embed-api-auth-container".
                                                 */
                                                gapi.analytics.auth.authorize({
                                                    container: 'embed-api-auth-container',
                                                    clientid: '733483521618-grnt5e6d4c1v425kea2ndulfut5oqcsn.apps.googleusercontent.com'
                                                });


                                                /**
                                                 * Create a ViewSelector for the first view to be rendered inside of an
                                                 * element with the id "view-selector-1-container".
                                                 */
                                                var viewSelector1 = new gapi.analytics.ViewSelector({
                                                    container: 'view-selector-1-container'
                                                });

                                                /**
                                                 * Create a ViewSelector for the second view to be rendered inside of an
                                                 * element with the id "view-selector-2-container".
                                                 */
                                                var viewSelector2 = new gapi.analytics.ViewSelector({
                                                    container: 'view-selector-2-container'
                                                });

                                                // Render both view selectors to the page.
                                                viewSelector1.execute();
                                                viewSelector2.execute();


                                                /**
                                                 * Create the first DataChart for top countries over the past 30 days.
                                                 * It will be rendered inside an element with the id "chart-1-container".
                                                 */
                                                var dataChart1 = new gapi.analytics.googleCharts.DataChart({
                                                    query: {
                                                        metrics: 'ga:sessions',
                                                        dimensions: 'ga:country',
                                                        'start-date': '30daysAgo',
                                                        'end-date': 'yesterday',
                                                        'max-results': 6,
                                                        sort: '-ga:sessions'
                                                    },
                                                    chart: {
                                                        container: 'chart-1-container',
                                                        type: 'PIE',
                                                        options: {
                                                            width: '100%',
                                                            pieHole: 4 / 9
                                                        }
                                                    }
                                                });


                                                /**
                                                 * Create the second DataChart for top countries over the past 30 days.
                                                 * It will be rendered inside an element with the id "chart-2-container".
                                                 */
                                                var dataChart2 = new gapi.analytics.googleCharts.DataChart({
                                                    query: {
                                                        metrics: 'ga:sessions',
                                                        dimensions: 'ga:country',
                                                        'start-date': '30daysAgo',
                                                        'end-date': 'yesterday',
                                                        'max-results': 6,
                                                        sort: '-ga:sessions'
                                                    },
                                                    chart: {
                                                        container: 'chart-2-container',
                                                        type: 'PIE',
                                                        options: {
                                                            width: '100%',
                                                            pieHole: 4 / 9
                                                        }
                                                    }
                                                });

                                                /**
                                                 * Update the first dataChart when the first view selecter is changed.
                                                 */
                                                viewSelector1.on('change', function (ids) {
                                                    dataChart1.set({ query: { ids: ids } }).execute();
                                                });

                                                /**
                                                 * Update the second dataChart when the second view selecter is changed.
                                                 */
                                                viewSelector2.on('change', function (ids) {
                                                    dataChart2.set({ query: { ids: ids } }).execute();
                                                });

                                            });
                                        </script>

                                    </div>
                                </div>
                            </div>

                            <div class="col-6">
                                <div class="card mb-3">
                                    <div class="card-header card-header-options">
                                        <span>Total Visitas por navegador últimos 30 días [todas las cuentas]</span>
                                        @Html.Partial("PanelActions")
                                    </div>
                                    <div class="card-block">

                                        <div id="embed-api-auth-container"></div>
                                        <div id="view-selector-container-top-browser"></div>
                                        <div id="main-chart-container"></div>
                                        <div id="breakdown-chart-container"></div>

                                        <script>

                                            gapi.analytics.ready(function () {

                                                /**
                                                 * Authorize the user immediately if the user has already granted access.
                                                 * If no access has been created, render an authorize button inside the
                                                 * element with the ID "embed-api-auth-container".
                                                 */
                                                gapi.analytics.auth.authorize({
                                                    container: 'embed-api-auth-container',
                                                    clientid: '733483521618-grnt5e6d4c1v425kea2ndulfut5oqcsn.apps.googleusercontent.com'
                                                });


                                                /**
                                                 * Create a new ViewSelector instance to be rendered inside of an
                                                 * element with the id "view-selector-container".
                                                 */
                                                var viewSelector = new gapi.analytics.ViewSelector({
                                                    container: 'view-selector-container-top-browser'
                                                });

                                                // Render the view selector to the page.
                                                viewSelector.execute();

                                                /**
                                                 * Create a table chart showing top browsers for users to interact with.
                                                 * Clicking on a row in the table will update a second timeline chart with
                                                 * data from the selected browser.
                                                 */
                                                var mainChart = new gapi.analytics.googleCharts.DataChart({
                                                    query: {
                                                        'dimensions': 'ga:browser',
                                                        'metrics': 'ga:sessions',
                                                        'sort': '-ga:sessions',
                                                        'max-results': '6'
                                                    },
                                                    chart: {
                                                        type: 'TABLE',
                                                        container: 'main-chart-container',
                                                        options: {
                                                            width: '100%'
                                                        }
                                                    }
                                                });


                                                /**
                                                 * Create a timeline chart showing sessions over time for the browser the
                                                 * user selected in the main chart.
                                                 */
                                                var breakdownChart = new gapi.analytics.googleCharts.DataChart({
                                                    query: {
                                                        'dimensions': 'ga:date',
                                                        'metrics': 'ga:sessions',
                                                        'start-date': '7daysAgo',
                                                        'end-date': 'yesterday'
                                                    },
                                                    chart: {
                                                        type: 'LINE',
                                                        container: 'breakdown-chart-container',
                                                        options: {
                                                            width: '100%'
                                                        }
                                                    }
                                                });


                                                /**
                                                 * Store a refernce to the row click listener variable so it can be
                                                 * removed later to prevent leaking memory when the chart instance is
                                                 * replaced.
                                                 */
                                                var mainChartRowClickListener;


                                                /**
                                                 * Update both charts whenever the selected view changes.
                                                 */
                                                viewSelector.on('change', function (ids) {
                                                    var options = { query: { ids: ids } };

                                                    // Clean up any event listeners registered on the main chart before
                                                    // rendering a new one.
                                                    if (mainChartRowClickListener) {
                                                        google.visualization.events.removeListener(mainChartRowClickListener);
                                                    }

                                                    mainChart.set(options).execute();
                                                    breakdownChart.set(options);

                                                    // Only render the breakdown chart if a browser filter has been set.
                                                    if (breakdownChart.get().query.filters) breakdownChart.execute();
                                                });


                                                /**
                                                 * Each time the main chart is rendered, add an event listener to it so
                                                 * that when the user clicks on a row, the line chart is updated with
                                                 * the data from the browser in the clicked row.
                                                 */
                                                mainChart.on('success', function (response) {

                                                    var chart = response.chart;
                                                    var dataTable = response.dataTable;

                                                    // Store a reference to this listener so it can be cleaned up later.
                                                    mainChartRowClickListener = google.visualization.events
                                                        .addListener(chart, 'select', function (event) {

                                                            // When you unselect a row, the "select" event still fires
                                                            // but the selection is empty. Ignore that case.
                                                            if (!chart.getSelection().length) return;

                                                            var row = chart.getSelection()[0].row;
                                                            var browser = dataTable.getValue(row, 0);
                                                            var options = {
                                                                query: {
                                                                    filters: 'ga:browser==' + browser
                                                                },
                                                                chart: {
                                                                    options: {
                                                                        title: browser
                                                                    }
                                                                }
                                                            };

                                                            breakdownChart.set(options).execute();
                                                        });
                                                });

                                            });
                                        </script>

                                    </div>
                                </div>
                            </div>

                        </div>

                        <div class="row">
                            <div class="col-6">
                                <div class="card mb-3">
                                    <div class="card-header card-header-options">
                                        <span>Listado tráfico referido últimos 30 días [todas las cuentas]</span>
                                        @Html.Partial("PanelActions")
                                    </div>
                                    <div class="card-block">

                                        <div id="embed-api-auth-container"></div>
                                        <div id="view-selector-container-referer"></div>
                                        <div id="main-chart-container-referer"></div>
                                        <div id="breakdown-chart-container-referer"></div>

                                        <script>

                                            gapi.analytics.ready(function () {

                                                /**
                                                 * Authorize the user immediately if the user has already granted access.
                                                 * If no access has been created, render an authorize button inside the
                                                 * element with the ID "embed-api-auth-container".
                                                 */
                                                gapi.analytics.auth.authorize({
                                                    container: 'embed-api-auth-container',
                                                    clientid: '733483521618-grnt5e6d4c1v425kea2ndulfut5oqcsn.apps.googleusercontent.com'
                                                });


                                                /**
                                                 * Create a new ViewSelector instance to be rendered inside of an
                                                 * element with the id "view-selector-container".
                                                 */
                                                var viewSelector = new gapi.analytics.ViewSelector({
                                                    container: 'view-selector-container-referer'
                                                });

                                                // Render the view selector to the page.
                                                viewSelector.execute();

                                                /**
                                                 * Create a table chart showing top browsers for users to interact with.
                                                 * Clicking on a row in the table will update a second timeline chart with
                                                 * data from the selected browser.
                                                 */
                                                var mainChart = new gapi.analytics.googleCharts.DataChart({
                                                    query: {
                                                        'dimensions': 'ga:fullReferrer',
                                                        'metrics': 'ga:sessions',
                                                        'sort': '-ga:sessions',
                                                        'max-results': '6'
                                                    },
                                                    chart: {
                                                        type: 'TABLE',
                                                        container: 'main-chart-container-referer',
                                                        options: {
                                                            width: '100%'
                                                        }
                                                    }
                                                });


                                                /**
                                                 * Create a timeline chart showing sessions over time for the browser the
                                                 * user selected in the main chart.
                                                 */
                                                var breakdownChart = new gapi.analytics.googleCharts.DataChart({
                                                    query: {
                                                        'dimensions': 'ga:date',
                                                        'metrics': 'ga:sessions',
                                                        'start-date': '30daysAgo',
                                                        'end-date': 'yesterday'
                                                    },
                                                    chart: {
                                                        type: 'LINE',
                                                        container: 'breakdown-chart-container-referer',
                                                        options: {
                                                            width: '100%'
                                                        }
                                                    }
                                                });


                                                /**
                                                 * Store a refernce to the row click listener variable so it can be
                                                 * removed later to prevent leaking memory when the chart instance is
                                                 * replaced.
                                                 */
                                                var mainChartRowClickListener;


                                                /**
                                                 * Update both charts whenever the selected view changes.
                                                 */
                                                viewSelector.on('change', function (ids) {
                                                    var options = { query: { ids: ids } };

                                                    // Clean up any event listeners registered on the main chart before
                                                    // rendering a new one.
                                                    if (mainChartRowClickListener) {
                                                        google.visualization.events.removeListener(mainChartRowClickListener);
                                                    }

                                                    mainChart.set(options).execute();
                                                    breakdownChart.set(options);

                                                    // Only render the breakdown chart if a browser filter has been set.
                                                    if (breakdownChart.get().query.filters) breakdownChart.execute();
                                                });


                                                /**
                                                 * Each time the main chart is rendered, add an event listener to it so
                                                 * that when the user clicks on a row, the line chart is updated with
                                                 * the data from the browser in the clicked row.
                                                 */
                                                mainChart.on('success', function (response) {

                                                    var chart = response.chart;
                                                    var dataTable = response.dataTable;

                                                    // Store a reference to this listener so it can be cleaned up later.
                                                    mainChartRowClickListener = google.visualization.events
                                                        .addListener(chart, 'select', function (event) {

                                                            // When you unselect a row, the "select" event still fires
                                                            // but the selection is empty. Ignore that case.
                                                            if (!chart.getSelection().length) return;

                                                            var row = chart.getSelection()[0].row;
                                                            var browser = dataTable.getValue(row, 0);
                                                            var options = {
                                                                query: {
                                                                    filters: 'ga:browser==' + browser
                                                                },
                                                                chart: {
                                                                    options: {
                                                                        title: browser
                                                                    }
                                                                }
                                                            };

                                                            breakdownChart.set(options).execute();
                                                        });
                                                });

                                            });
                                        </script>

                                    </div>
                                </div>
                            </div>

                            <div class="col-6">
                                <div class="card mb-3">
                                    <div class="card-header card-header-options">
                                        <span>Listado visitas últimos 30 días [operadormaquinaria.com] id: 105059559</span>
                                        @Html.Partial("PanelActions")
                                    </div>
                                    <div class="card-block">

                                        <section id="auth-button"></section>
                                        <section id="view-selector"></section>
                                        <section id="timeline"></section>

                                        <script>

                                            gapi.analytics.ready(function () {

                                                // Step 3: Authorize the user.

                                                var CLIENT_ID = 'insert client id here';

                                                gapi.analytics.auth.authorize({
                                                    container: 'auth-button',
                                                    clientid: '733483521618-grnt5e6d4c1v425kea2ndulfut5oqcsn.apps.googleusercontent.com	'
                                                });



                                                // Step 4: Create the timeline chart.

                                                var timeline = new gapi.analytics.googleCharts.DataChart({
                                                    reportType: 'ga',
                                                    query: {
                                                        'ids': 'ga:105059559',
                                                        'dimensions': 'ga:date',
                                                        'metrics': 'ga:sessions',
                                                        'start-date': '30daysAgo',
                                                        'end-date': 'yesterday',
                                                    },
                                                    chart: {
                                                        type: 'LINE',
                                                        container: 'timeline',
                                                        options: {
                                                            width: '100%'
                                                        }
                                                    }
                                                });

                                                timeline.execute();


                                            });
                                        </script>

                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>


            </div>

        </div>
    </div>
</div>